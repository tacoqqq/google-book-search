{"version":3,"sources":["book/book.js","booklist/booklist.js","searchbar/searchbar.js","App.js","index.js"],"names":["formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","Book","className","this","props","name","src","image","alt","author","isNaN","price","format","description","Component","BookList","books","booklist","map","book","id","volumeInfo","title","authors","join","searchInfo","textSnippet","link","selfLink","saleInfo","retailPrice","amount","saleability","imageLinks","thumbnail","key","defaultProps","SearchBar","state","query","printtype","booktype","error","value","setState","paramObj","Object","keys","str","encodeURIComponent","e","preventDefault","params","q","printType","filter","queryStrings","formatQuery","finalUrl","console","log","fetch","then","response","ok","Error","json","responseJson","handleSearch","catch","err","message","handleError","onSubmit","handleSubmit","htmlFor","required","type","onChange","queryChanged","target","placeholder","printTypeChanged","bookTypeChanged","App","results","newBooklist","items","errorMessage","pageDisplay","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d18b4418.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './book.css';\n\nconst formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2\n  })\n\nclass Book extends Component {\n    render(){\n        return(\n            <div className=\"book\">\n                <h3>{this.props.name}</h3>\n                <div className=\"book-description\">\n                    <div className=\"book-image\">\n                        <img src={this.props.image} alt={this.props.name}></img>\n                    </div>\n                    <div className=\"book-details\">\n                        <p>Author: {this.props.author}</p>\n                        <p>Price: {isNaN(this.props.price) ? this.props.price : formatter.format(this.props.price)}</p>\n                        <p className=\"book-details-description\">{this.props.description}</p>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Book;","import React,{Component} from 'react';\nimport Book from '../book/book';\nimport './booklist.css';\n\nclass BookList extends Component {\n    render(){\n        const books = this.props.booklist.map((book,id) => \n            <Book \n                name={book.volumeInfo.title} \n                author={book.volumeInfo.authors.join(\", \")}\n                description={book.searchInfo? book.searchInfo.textSnippet : \"No description available\"}\n                link={book.selfLink}\n                price={book.saleInfo.retailPrice? book.saleInfo.retailPrice.amount : book.saleInfo.saleability} \n                image={book.volumeInfo.imageLinks? book.volumeInfo.imageLinks.thumbnail : \"https://upload.wikimedia.org/wikipedia/en/6/60/No_Picture.jpg\"}\n                key={id}/>\n            )\n\n        return(\n            <section>\n                {books}\n            </section>\n        )\n    }\n\n}\n\nBookList.defaultProps = {\n    booklist: []\n  };\n  \n\nexport default BookList;","import React, {Component} from 'react';\nimport './searchbar.css'\n\nconst url = \"https://www.googleapis.com/books/v1/volumes\";\n\n\nclass SearchBar extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            query: \"\",\n            printtype: \"none\",\n            booktype: \"none\",\n            error: \"\"\n        }\n    }\n\n    queryChanged(value){\n        this.setState({\n            query: value\n        })\n    }\n\n    printTypeChanged(value){\n        this.setState({\n            printtype: value\n        })\n    }\n\n    bookTypeChanged(value){\n        this.setState({\n            booktype: value\n        })\n    }   \n\n    formatQuery(paramObj){\n        const queryStrings = Object.keys(paramObj).map(str => `${encodeURIComponent(str)}=${encodeURIComponent(paramObj[str])}`) // [key printtype booktype q]\n        return queryStrings.join(\"&\");\n    }\n\n    handleSubmit(e){\n\n        e.preventDefault();\n\n        const params = {\n            key: \"AIzaSyDvm_H1Snv3dZIIwLZKrMDzbHlShmBT0yg\",\n            q: this.state.query\n        }\n\n        if (this.state.printtype !== \"none\"){\n            params.printType = this.state.printtype\n        }\n\n        if (this.state.booktype !== \"none\"){\n            params.filter = this.state.booktype\n        }\n\n        const queryStrings = this.formatQuery(params);\n        const finalUrl = `${url}?${queryStrings}`\n        console.log(finalUrl)\n\n        fetch(finalUrl)\n            .then(response => {\n                if (!response.ok){\n                    throw new Error('Something went wrong. Please try again.')\n                }\n                return response.json();\n            })\n            .then(responseJson => {\n                console.log(responseJson)\n                this.setState({\n                    error: \"\"\n                })\n                this.props.handleSearch(responseJson,this.state.error)\n            })\n            .catch(err => {\n                this.setState({\n                    error: err.message\n                })\n                this.props.handleError(this.state.error)\n            })\n    }\n\n    render(){\n        const error = this.state.error\n                      ? <div>{this.state.error}</div>\n                      : \"\"\n        return (\n            <section className=\"search-bar\">\n                <form className=\"search-bar-form\" onSubmit={e => this.handleSubmit(e)}>\n                    <div className=\"search-bar-first-row\">\n                        <div>\n                            <label htmlFor=\"search-query\">Search:</label>\n                            <input \n                                required\n                                type=\"text\" \n                                id=\"search-query\" \n                                name=\"search-query\"\n                                value={this.state.query}\n                                onChange={e => this.queryChanged(e.target.value)}\n                                placeholder=\"book name\" />\n                        </div>\n                        <div>\n                            <button type=\"submit\">Search</button>\n                        </div>\n                    </div>\n                    <div className=\"search-bar-second-row\">\n                        <div className=\"print-type-filter\">\n                            <label htmlFor=\"print-type\">Print Type:</label>\n                            <select \n                                name=\"print-type\" \n                                id=\"print-type\" \n                                value={this.state.printtype}\n                                onChange={e => this.printTypeChanged(e.target.value)}>\n                                <optgroup>\n                                    <option value=\"none\">all</option>\n                                    <option value=\"partial\">partial</option>\n                                    <option value=\"full\">full</option>\n                                    <option value=\"free-ebooks\">free-ebooks</option>\n                                    <option value=\"paid-ebooks\">paid-ebooks</option>\n                                    <option value=\"ebooks\">ebooks</option>\n                                </optgroup>\n                            </select>\n                        </div>\n                        <div className=\"book-type-filter\">\n                            <label htmlFor=\"book-type\">Book Type:</label>\n                            <select \n                                name=\"book-type\" \n                                id=\"book-type\"\n                                value={this.state.booktype}\n                                onChange={e => this.bookTypeChanged(e.target.value)}>\n                                <optgroup>\n                                    <option value=\"none\">all</option>\n                                    <option value=\"books\">books</option>\n                                    <option value=\"magazines\">magazines</option>\n                                </optgroup>\n                            </select>                            \n                        </div>\n                    </div>\n                </form>\n            </section>\n        )\n    }\n}\n\nexport default SearchBar;","import React,{Component} from 'react';\nimport './App.css';\nimport BookList from './booklist/booklist';\nimport SearchBar from './searchbar/searchbar';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      booklist: [],\n      error: \"\",\n    }\n  }\n\n  handleSearch(results,err){\n    const newBooklist = results.items;\n    const errorMessage = err;\n    this.setState({\n      booklist: newBooklist,\n      error: errorMessage\n    })\n  }\n\n  handleError(err){\n    const errorMessage = err;\n    this.setState({\n      error: errorMessage\n    })\n  }\n\n  render(){\n    const pageDisplay = this.state.error.length\n                  ? <div className=\"error-message\">Oh oh! Sorry... no result is found! Try again maybe?</div>\n                  : <BookList booklist={this.state.booklist}/>\n\n    return(\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Google Book Search</h1>\n        </header>\n        <SearchBar handleSearch={(results,err) => this.handleSearch(results,err)} handleError={err => this.handleError(err)}/>\n        {pageDisplay}\n      </div>\n    );\n  } \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}